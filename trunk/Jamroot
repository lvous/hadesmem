local boost = [ modules.peek : BOOST_ROOT ]
  ;
  
use-project /boost 
  : 
    $(boost) 
  ;

use-project /Common 
  : 
    Include/Common 
  ; 
  
use-project /Dependencies 
  : 
    Src/Dependencies
  ;
  
use-project /Injected 
  : 
    Src/Injected
  ;
  
use-project /GUI 
  : 
    Src/GUI 
  ; 
   
use-project /Memory 
  : 
    Src/Memory 
  ; 
   
use-project /Scripting 
  : 
    Src/Scripting
  ; 
  
use-project /Doc 
  : 
    Doc
  ; 
  
project 
  : 
    requirements 
    <define>BOOST_FILESYSTEM_VERSION=3 
    <define>BOOST_SYSTEM_NO_DEPRECATED=1 
    <define>UNICODE 
    <define>_UNICODE 
    <toolset>msvc:<define>_WIN32_WINNT=_WIN32_WINNT_WS03 
    <toolset>msvc:<define>WINVER=_WIN32_WINNT_WS03 
    <toolset>msvc:<define>_SCL_SECURE_NO_WARNINGS 
    <runtime-link>shared 
    <toolset>gcc:<cxxflags>"-std=c++0x" 
  : 
    default-build debug 
  ;

path-constant TOP 
  : 
    . 
  ;

build-project Src/Dependencies 
  ;
  
build-project Src/Injected 
  ;
  
build-project Src/Memory 
  ;
  
build-project Src/GUI 
  ;
  
build-project Src/Scripting 
  ;
  
build-project Doc
  ;

rule Install-Rule ( properties * ) 
{
  local result 
    ;
  
  if <address-model>32 in $(properties)
  {
    if <variant>debug in $(properties)
    {
      if <toolset>gcc in $(properties)
      {
        result += <location>Bin/GCC/Debug/IA32 
          ;
      }
      
      if <toolset>msvc in $(properties)
      {
        result += <location>Bin/MSVC/Debug/IA32 
          ;
      }
    }

    if <variant>release in $(properties)
    {
      if <toolset>gcc in $(properties)
      {
        result += <location>Bin/GCC/Release/IA32 
          ;
      }
      
      if <toolset>msvc in $(properties)
      {
        result += <location>Bin/MSVC/Release/IA32 
          ;
      }
    }
  }
  
  if <address-model>64 in $(properties)
  {
    if <variant>debug in $(properties)
    {
      if <toolset>gcc in $(properties)
      {
        result += <location>Bin/GCC/Debug/AMD64 
          ;
      }
      
      if <toolset>msvc in $(properties)
      {
        result += <location>Bin/MSVC/Debug/AMD64 
          ;
      }
    }

    if <variant>release in $(properties)
    {
      if <toolset>gcc in $(properties)
      {
        result += <location>Bin/GCC/Release/AMD64 
          ;
      }
      
      if <toolset>msvc in $(properties)
      {
        result += <location>Bin/MSVC/Release/AMD64 
          ;
      }
    }
  }
  
  return $(result) 
    ;
}

install Bin 
  : 
    Src/Injected 
    Src/Memory 
    Src/GUI 
    Src/Scripting 
    Misc/DbgHelp/IA32/dbghelp.dll 
    Misc/DbgHelp/IA32/symsrv.dll 
  : 
    <conditional>@Install-Rule 
    <install-dependencies>on 
    <install-type>SHARED_LIB 
    <install-type>EXE 
    <install-type>PYTHON_EXTENSION 
    <address-model>32 
  ;


install Bin 
  : 
    Src/Injected 
    Src/Memory 
    Src/GUI 
    Src/Scripting 
    Misc/DbgHelp/AMD64/dbghelp.dll 
    Misc/DbgHelp/AMD64/symsrv.dll 
  : 
    <conditional>@Install-Rule 
    <install-dependencies>on 
    <install-type>SHARED_LIB 
    <install-type>EXE 
    <install-type>PYTHON_EXTENSION 
    <address-model>64 
  ;
