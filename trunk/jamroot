# Import module for Boost support.
import boost
  ;

# Use Boost libraries.
boost.use-project
  ;
 
# Use AsmJit library. 
use-project /asmjit
  :
    src/asmjit
  ;
  
# Use udis86 library. 
use-project /udis86
  :
    src/udis86
  ;
 
# Use PugiXML library. 
use-project /pugixml
  :
    src/pugixml
  ;
  
# Use HadesMem tests.
use-project /tests
  :
    tests
  ;

# Use HadesMem examples.
use-project /examples
  :
    examples
  ;

project memory
  :
    requirements
    
    # Tell Boost to use windows.h.
    <define>BOOST_USE_WINDOWS_H
    
    # Disallow use of deprected Boost APIs.
    <define>BOOST_SYSTEM_NO_DEPRECATED
    <define>BOOST_FILESYSTEM_NO_DEPRECATED
    
    # Enforce strict Windows typedefs.
    <define>STRICT
    <define>STRICT_TYPED_ITEMIDS
    
    # Force use of Unicode APIs, entry point, etc.
    <define>UNICODE
    <define>_UNICODE
    
    # Disable warnings about use of 'unsafe' CRT and STL functions.
    <define>_CRT_SECURE_NO_WARNINGS
    <define>_SCL_SECURE_NO_WARNINGS
    
    # Minimum supported OS is Windows Vista
    <define>WINVER=_WIN32_WINNT_VISTA
    <define>_WIN32_WINNT=_WIN32_WINNT_VISTA
    
    # Compile for x86/x64, with static linking to the multi-threaded runtime.
    <architecture>x86
    <threading>multi
    <runtime-link>shared
    
    # Disable warning relating to the length of decorated names caused by 
    # some Boost components. This warning can safely be ignored as it does 
    # not affect program correctness.
    <toolset>msvc:<cxxflags>"/wd4503"
    <toolset>intel:<cxxflags>"/Qwd2586"
    # Disable behavior change 'warning', "an object of POD type constructed 
    # with an initializer of the form () will be default-initialized". This 
    # warning can be safely ignored as it's just a notification about a 
    # deficiency in the compiler, it doesn't indicate a problem with the code.
    <toolset>msvc:<cxxflags>"/wd4345"
    # Disable "dynamic exception specifications are deprecated". Causes 
    # unsuppressable false positives in Boost code, and no hadesmem code uses 
    # dynamic exception specifications.
    <toolset>intel:<cxxflags>"/Qwd3346"
    
    # --export-all-symbols is required because of a bug in Clang's dllexport  
    # support. Remove once this has been fixed.
    <toolset>clang:<linkflags>"-Wl,--export-all-symbols"
    
    # Required for Boost.
    <toolset>clang:<linkflags>"-Wl,--allow-multiple-definition"
    
    # Required for <intrin.h>.
    <toolset>clang:<cxxflags>"-mmmx -m3dnow"

    # Enable checks for signed overflow in debug builds
    <toolset>gcc,<variant>debug:<cxxflags>"-ftrapv"
    <toolset>clang,<variant>debug:<cxxflags>"-ftrapv"
    
    # Enable C++11 Mode
    <toolset>gcc:<cxxflags>"-std=c++11"
    <toolset>clang:<cxxflags>"-std=c++11"
    <toolset>intel:<cxxflags>"/Qstd=c++11"
    
    # Enable LTO/LTCG
    <variant>release,<toolset>msvc:<cxxflags>"/GL"
    <variant>release,<toolset>msvc:<linkflags>"/LTCG"
    <variant>release,<toolset>intel:<cxxflags>"/GL"
    <variant>release,<toolset>intel:<linkflags>"/LTCG"
    <variant>release,<toolset>gcc:<cxxflags>"-flto"
    
    # Improve standards conformance under MSVC
    <toolset>msvc:<cxxflags>"/Zc:rvalueCast"
    <toolset>msvc:<cxxflags>"/volatile:iso"
        
    # Enable generation of debugging symbols, even under release mode.
    <debug-symbols>on
    
    # This (undocumented) flag vastly improves the PDBs generated by MSVC for 
    # optimized code. Code-gen is not affected, the only downside is that the 
    # size of the PDB is increased.
    <variant>release,<toolset>msvc:<cxxflags>/d2Zi+
  :
    # Build under debug mode by default.
    default-build debug
  :
    # Output to 'bin' directory.
    build-dir bin
  ;
  
lib advapi32
  :
  :
    <name>advapi32
  ;
  
lib shell32
  :
  :
    <name>shell32
  ;

lib shlwapi
  :
  :
    <name>shlwapi
  ;

lib user32
  :
  :
    <name>user32
  ;
  
alias memory
  :
  :
  :
  :
    <library>advapi32
    <library>shell32
    <library>shlwapi
    <library>user32
	
    <library>/boost//headers
    <library>/boost//exception/<link>static
	
    <library>src/asmjit

    <library>src/udis86

    <library>src/pugixml

    <include>"./include/memory"
  ;

# Build HadesMem tests.
build-project tests
  ;

# Build HadesMem examples.
build-project examples
  ;

# Install to 'dist' directory.
install dist
  :
    # Install examples.
    examples
  :
    # Give each toolset, variant, and architecture combination its own 
    # directory.
    
    <toolset>msvc,<variant>debug,<address-model>32:<location>dist/msvc/debug/x86
    <toolset>msvc,<variant>debug,<address-model>64:<location>dist/msvc/debug/x64
    <toolset>msvc,<variant>release,<address-model>32:<location>dist/msvc/release/x86
    <toolset>msvc,<variant>release,<address-model>64:<location>dist/msvc/release/x64
    
    <toolset>gcc,<variant>debug,<address-model>32:<location>dist/gcc/debug/x86
    <toolset>gcc,<variant>debug,<address-model>64:<location>dist/gcc/debug/x64
    <toolset>gcc,<variant>release,<address-model>32:<location>dist/gcc/release/x86
    <toolset>gcc,<variant>release,<address-model>64:<location>dist/gcc/release/x64
    
    <toolset>clang,<variant>debug,<address-model>32:<location>dist/clang/debug/x86
    <toolset>clang,<variant>debug,<address-model>64:<location>dist/clang/debug/x64
    <toolset>clang,<variant>release,<address-model>32:<location>dist/clang/release/x86
    <toolset>clang,<variant>release,<address-model>64:<location>dist/clang/release/x64
    
    <toolset>intel,<variant>debug,<address-model>32:<location>dist/intel/debug/x86
    <toolset>intel,<variant>debug,<address-model>64:<location>dist/intel/debug/x64
    <toolset>intel,<variant>release,<address-model>32:<location>dist/intel/release/x86
    <toolset>intel,<variant>release,<address-model>64:<location>dist/intel/release/x64
    
    # Automatically pull in dependencies.
    <install-dependencies>on
    
    # Install both EXEs and DLLs.
    <install-type>SHARED_LIB
    <install-type>EXE
  ;

# Allow easy consumption by 3rd parties.
alias hadesmem
  :
    memory
  ;
